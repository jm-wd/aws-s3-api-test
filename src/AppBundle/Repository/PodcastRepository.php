<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * PodcastRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PodcastRepository extends \Doctrine\ORM\EntityRepository
{

    public function getAllPodcasts()
    {

        $qb = $this->getEntityManager()->createQuery('SELECT p FROM AppBundle\Entity\Podcast p');

        //array result makes sure only podcast data sent not doctrine object with linked episodes
        $qb = $qb->getArrayResult();

        return $qb;
    }

    public function getPodcast($id)
    {

        $qb = $this->getEntityManager()->createQuery('SELECT p FROM AppBundle\Entity\Podcast p WHERE p.id = :id');
        $qb->setParameter('id', $id);

        //array result makes sure only podcast data sent not doctrine object with linked episodes
        $qb = $qb->getArrayResult();

        return $qb;

    }

    public function getPodcastEpisodes($id)
    {

        $qb = $this->getEntityManager()->createQuery('SELECT p FROM AppBundle\Entity\Podcast p WHERE p.id = :id');
        $qb->setParameter('id', $id);

        //Use result for linked episode data
        $qb = $qb->getResult();

        return $qb;

    }

    public function getPodcastByIdOrName($params)
    {

        $qb = $this->createQueryBuilder('p');

        $searchParams = [];
        $where = '';

        foreach($params as $paramKey => $paramVal) {

            $where .= " p.{$paramKey} = :{$paramKey} OR";
            $searchParams["$paramKey"] = $paramVal;

        }

        $where = rtrim($where, 'OR');

        $qb->select('p')
            ->where($where);

        $qb->setParameters($searchParams);

        return $qb->getQuery()->getOneOrNullResult();

    }

}
